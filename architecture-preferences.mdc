---
description: 
globs: 
alwaysApply: false
---
# Architecture and Technical Preferences

## Stack Preferences
- Prefer modern JavaScript frameworks like Next.js for frontend development
- Use PostgreSQL for database management and queues
- Use Docker for deployment on Digital Ocean's app platform
- Use Digital Ocean's file storage
- Choose simpler, proven solutions over complex ones

## Email and Notifications
- Implement queuing for email operations
- Use Postmark as the email service provider
- Implement proper email security (SPF, DKIM)
- Keep email templates clean and action-oriented
- Support both HTML and text email versions

## Authentication Approaches
- Use magic link for user authentication
- Allow optional password-based auth as user choice
- Keep auth simple unless specific requirements dictate otherwise
- Implement proper email verification

## Development Process
- Start with SQLite for rapid development
- Use Docker from the beginning
- Implement proper dev/staging/prod environments
- Use free tier services where possible for monitoring/logging
- Keep deployment process simple and automated

## Security Practices
- Private by default for any group/sharing features
- Implement rate limiting early
- Add spam protection from the start
- Use proper queue system for background tasks
- Follow security best practices without overengineering

## UI/UX Preferences
- Use Tailwind CSS for styling
- Keep UI clean and modern
- Make interfaces mobile-responsive from the start
- Implement proper loading states
- Focus on usability over fancy features

## Database and Performance
- Start with simple, efficient schemas
- Use proper indexes from the beginning
- Implement caching strategies early
- Keep queries optimized
- Use soft deletes by default 